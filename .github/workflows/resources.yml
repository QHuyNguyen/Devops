# This is a basic workflow to help you get started with Actions

name: Arthur AWS Resource Init/Plan/Apply

run-name: Run Terraform plan/apply on AWS resources


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACCESS_KEY_ID: ASIA2QIXXJAZHHCOKMYT
  SECRET_ACCESS_KEY: S+hEQ8vI9XAODt7xWzJeIuDLh2h1Y53MJCb+yAMW
  AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjEFcaDmFwLXNvdXRoZWFzdC0yIkgwRgIhAOa5NnD4gr35vVdbKuOx/2XzQrdjt7C2HzplDigE09FXAiEAgAI+q1iY4qEm9udQ1lUL4Wo17q2YXubsBcaR205URioqjgMIERADGgw3MjIxNDExMzY5NDYiDKOIMpBLASqKcfiKXCrrAhqQbhSbhoTthZqENFylfwV4qopFUq6mUtsOdUF6Jxcz7+8LI0R0lAyfpTmGTDqpfVn8cWmafU66FzfsTQS/ksa8wIf0IqjFc4UJwPVXPXaxro1girj1ykldeVm9vr4ZE/Iq5ru2jisqujdjXN0Fv7QGQi6URGWRvgvvoCIcH2Ss7BaBrZbfHYhWi+ewO1TjYBtx/iZAabypgGsowfP2qhwWvTUkghc0s4vznpK0r6ciAgVze9wb54a57OYDf8AWVYq+pcYXTHOktHkxggj/44ZTBPi70dfi2rSPClSrU3MoKAipu9/REAFYMR0U6GKQRe+EGTX3HDXsio1DkNymckQdjANgxTJCZkdHYh8ZgrE2VEP/hGk6fXHhl6IszSNtqm8N9iW01eMB7H3dZ2qt5botedXrpZ6sl24dBF6YSnrY5POmmrvNCw+s2DZWKDcBjcTwkdApdQwmcLt6hhbjKbnpa558TCVPLteQhDCoieKmBjqlAb5l6C/UL2Aew8VJqBVTQhnRBukrjyV8rozK/cehIvDJbyNt+5l0nzbx/47u8tjuk3BGNvGQuOJ7w4DTeXKZv59PI4liEcxpYxmWILQN/rklwpaaKJdjLaYyMm2PPmA74QlrmnP04XfN6VMAc+sj6QUAy9jatCXIwKOcBgEPYfT8PF3bF9FggU4dLCRL2+t6xR/q6Bpkmr4edmbpA/tdqNjviWzJLA==
  AWS_EC2_METADATA_DISABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "setup"
  vpc-plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/vpc

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Access AWS account
        # access key for devops aws
        run: |
          aws sts get-caller-identity

      - name: Terraform Init
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          make init
      
      - name: Terraform Plan
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }} 
          make plan
      
      - name: Terraform Show
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          make show

  vpc-apply:
    runs-on: ubuntu-latest
    environment: production
    needs: vpc-plan
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/vpc
    steps:
      - uses: actions/checkout@v3
      - name: Terraform Apply
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          make apply