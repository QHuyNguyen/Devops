# This is a basic workflow to help you get started with Actions

name: Arthur AWS Resource Init/Plan/Apply

run-name: Run Terraform plan/apply on AWS resources


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACCESS_KEY_ID: ASIA2QIXXJAZLSSHSXQY
  SECRET_ACCESS_KEY: WNQzo5hWdJl9WVPghW3dZ+GK9au3i0sIqwgVHws4
  AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjELj//////////wEaDmFwLXNvdXRoZWFzdC0yIkYwRAIgO1nCiAsYHZF3VzUv4p3ymLB107S3y/AIEA19IzmnmNACIBjlQoK3JxulzFpaBCVNTr27P+C0gA9XlfvJV7o8f+JqKo4DCEEQAxoMNzIyMTQxMTM2OTQ2Igy/Op4UzjUR3RLRccgq6wJdqKUBu7QU9eNCKECO6zn/bxLKh0+ajMi3qH9AaB/NK3Vbn7YD4XIthcXKv0VoyBlLvImGkg6xTg6dfa+RxJ20dwJM0KGIhzKQNS78/a7MToJEUjNWq+7bXNbrD8Jg7olf4pPdlQ8/ZbyOGC0jGxG2iq0xhjVv6Qk1U140Zar4fkSa5wXgXtGixfutmRBIwq/VV2PTJhsLEblPwKu5ea/fiNq9ceXmr9bMsrlmOX9ZbCdPMKyyWZZhi141pxwWe88njtzr+5TWQkAkcCGx4pexILr8WDZBs+xwqKOMK7q2M4xiM1rHJxmjKYjMqs40zyDQWsS7vVg42+b87okxU2GlaPv24Ur0wgqeXWKkN8HKyVxbmPD8e34K0YHNG2Cc6CE4R78Kqwe1x3APrbnXEd0RaBANEPxjR1lZ6pX48LK2nxvWJq/TetNgGk9qiFjTJ0sRfG+zFDUqX3rrEcrRTkMQl5PGJHG6d9BBqugwp7vOpQY6pwGTL2lgx1K5L6iiEpMZaa+P74YeeOFTdRKTA0IGfIN/z2fx/0KqLtAcHZrW8+dRywdZM7nk+/DcDv9I8Ej0ac+jnBsJli2Q+tfIuATsIwGZ7lnAGS/38s4wafaYLB2Nct3bztnOud+CLYDTBH0CTpRAI8qJfqgjbx3XybP1lDCeadPenclW4B+Z7tPHTLcTbO0/9eWuwjurII9W7/Zrug/OC72oKivOoQ==
  AWS_EC2_METADATA_DISABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "setup"
  vpc-plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/vpc

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Access AWS account
        # access key for devops aws
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          aws sts get-caller-identity

      - name: Terraform Init
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          make init
      
      - name: Terraform Plan
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }} 
          make plan
      
      - name: Terraform Show
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          make show

  vpc-apply:
    runs-on: ubuntu-latest
    environment: production
    needs: vpc-plan
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/vpc
    steps:
      - uses: actions/checkout@v3
      - name: Terraform Apply
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          make apply