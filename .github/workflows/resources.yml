# This is a basic workflow to help you get started with Actions

name: Arthur AWS Resource Init/Plan/Apply

run-name: Run Terraform plan/apply on AWS resources


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACCESS_KEY_ID: ASIA2QIXXJAZH6XNE3GO
  SECRET_ACCESS_KEY: sPn9NV12IgvHf+Kh8r/lNh5HFmKmz77sm1zs+EqX
  AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjENj//////////wEaDmFwLXNvdXRoZWFzdC0yIkgwRgIhAMncMwl+5skCpn7CnaZTJo3ewIgeqR/5attvx4VuL/xrAiEAhqccrQ22+vnxAvWdOJ+A87YKRikKjzZc2UFXhlTbRAEqjgMIURADGgw3MjIxNDExMzY5NDYiDAKY8XduIhzOFrv/SirrAusU4YpqvmGdZ0zp/KgKMRuy1BjFxIp5JTxUhJieor2r6qCAse2eI0zC4Zrut/KO8Bz4wnBwBW/qDG1yH3DIRMIx0yczaveRC2KWjqJm1IMpCUkRLCuMsGyPcggo01gWmTz7TjeLhky0YNzKy6r8Z1PH0oHE/wy/jBxbFS8dsG4ze+/uFGZKFsVdSGM/r7OVgrW2/Nx3JagIYzkJGCh+IPyOgE3MWxMpKBHJsxXrUk6EEwa1bCHj4Ry4FNrOMGvJY9uEP5RcpCl9lGatTa6INu8FGzb+8EUBn0cEeWxEfvK4WaIK7lHQaylKiym4MTPW7ggmk59LuP+PMFDZ2XnFxNm4Mvy18RFSZy0LJc5//lvrNTCSrQogHz1HqqhhHOiuec3Iv5twh9c55gCrreIkAZDHjzOOMz7lJnPiAuoUCr3eVzLvKID6Qsuk7zgVL3EBxfBNWaauePmQv/EpQoQrKA0tsH5tDLuFRs3D7zDnp52lBjqlASr3xII5Ygj8oxDokV/SekN+/h/f07SYYUxQymojlrR+dbUY7tiYyhiVBuVxMture7Hma8LChFzkta1D4STX1GRxFzFV5A+Sgk4mQHLAaHsbyJhGwsq3hsmEpC5TlHyfdQZjgr2fSI4MyPQAUUppvX88ZvMTTVIUATNNZNnnL4kQmOD83woMYlqamZLK4gJOBseKy+sYO1/qt0R/jNEoOgrV239JcQ==
  AWS_EC2_METADATA_DISABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "setup"
  vpc-plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/vpc

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Access AWS account
        # access key for devops aws
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          aws sts get-caller-identity

      - name: Terraform Init
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform init
      
      - name: Terraform Plan
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform plan -var-file="module.tfvars"
      
      - name: Terraform Show
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform show

  vpc-apply:
    runs-on: ubuntu-latest
    environment: production
    needs: vpc-plan
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/vpc
    steps:
      - uses: actions/checkout@v3
      - name: Terraform Apply
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform init
          terraform apply -var-file="module.tfvars" --auto-approve