name: Github Action Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
#Defining inputs for manually triggered workflows
  workflow_dispatch:
    inputs:
      component:
        description: 'AWS Resources to be deployed'
        required: true
        type: string

jobs:
  Explore-Github-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: echo "Selected Component is ${{ inputs.component }}"

  Check-aws-login:
    runs-on: ubuntu-latest
    env:
      ACCESS_KEY_ID: ASIA2QIXXJAZAL6FCN2V
      SECRET_ACCESS_KEY: H9A1tMAeD5p3nlES3+2MwJi1xGIQHMqGZntjoXUQ
      AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjEFEaDmFwLXNvdXRoZWFzdC0yIkcwRQIgXVnc1nAeqFlatABRMkQfjV+3g36Fi7cHn7IEOm4k8QUCIQDjZPl/UyEps2zBnll6/DSP75934oxy/W+KIiq2eBT3hSqeAwhKEAMaDDcyMjE0MTEzNjk0NiIMmX9OikOiNJ7USTiZKvsC3EbVJSJnVBwa6zcEe/vl5HWf3e8Ss6V847Rj7RWovm65dP163mot8ncLQamfXFYiF2lNpwykUTtuBxZ/DwvB35cxHaN2L+TCkY33PruEsEfIh/QjUHWFFnHzXVFb5D9j1iLW6sTOx38xFFahJgio44RbPxWumz9u/Oj2/GAAQKXxOkyTf7sfW+DMG3Zj+iUaiwZ4lRr6J4/1SvTzdm1/bfOfiOvH/n2Jz9y+b2bvk9c8GmGEZ8zaL0xRam+Pp87tGXGF5dCqFH2nQNVBjgBYHa9sk635fn4xLQS24KeBjyRR6tm8a7YPx9Tk/Z371FJPv2Vb5cjeB4CDaS4ELjCi5I/896vV271Ph8IP8H3S+FajrF3U9UhnuV4Yy5I+3oU8kMbuZUFeGAnPOj51zuwKjX/yBdXeI/8YOgT/awUZ6b9Exbjh5F84MuClgc2GCfo2Nds+P2i3ZthS1KIJpRgHmgYIb8qFqSz7QQXfH3BRcuKgavd/yJ33B5HwCDCJ76S8BjqmAZOH3/26Ygn/MKDDzeBdcQCAK+2fRMKTeURzBi2tTQDjcetgzWxpe7XQf2KnSdT5ZKZV4N1PdtrKC904ASOw4ErbuXfnpJgJsn2fYTq1RjCXizoIiTUw2KxKSHwd7JGD8nqcWsET7e733ai3BwrOVdHkaoxz431Hq1GHGHni9CvqIPAOZ6ceZlLu1JYJJXyW2vr/40b6zP8WDGPbtsnOG7HX4HKReWI=
    steps:
      - uses: actions/checkout@v3
      - run: |
          ls -la
          make sts
  
  generate-network-run-plan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ["test-vpc"]
    steps:
      - uses: actions/checkout@v3
      - name: Run make init
        run: |
          TYPE=infrastructure AWS_ACCOUNT_NAME=network COMPONENT=${{ matrix.component }} make init-test
      - name: Run make plan
        id: plan
        run: |
          TYPE=infrastructure AWS_ACCOUNT_NAME=network COMPONENT=${{ matrix.component }} make plan-test >> out.plan
          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          echo ":orange_circle:" >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          cat out.plan >>  $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Display plan output
        run: |
          echo "${{ steps.plan.outputs.plan }}"
      
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ${{ steps.plan.outputs.plan }}
          GITHUB_TOKEN:  ${{ secrets.github_token }}
      
      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |      
          TYPE=infrastructure AWS_ACCOUNT_NAME=network COMPONENT=${{ matrix.component }} make apply-test
  
  generate-identity-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run identity make init
        run: |
          TYPE=infrastructure AWS_ACCOUNT_NAME=identity COMPONENT=session-manager make init-test
      - name: Run identity make plan
        id: plan
        run: |
          TYPE=infrastructure AWS_ACCOUNT_NAME=identity COMPONENT=session-manager make plan-test >> out.plan
          echo 'plan<<AOE' >> $GITHUB_OUTPUT
          echo ":orange_circle:" >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          cat out.plan >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          echo 'AOE' >> $GITHUB_OUTPUT
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ${{ steps.plan.outputs.plan }}
          GITHUB_TOKEN:  ${{ secrets.github_token }}
      - name: Run identity make apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |      
          TYPE=infrastructure AWS_ACCOUNT_NAME=identity COMPONENT=session-manager make apply-test
  
  generate-workload-ansible-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run ansible make init
        run: |
          TYPE=workloads AWS_ACCOUNT_NAME=ansible COMPONENT=ansible make init-test
      - name: Run ansible make plan
        id: plan
        run: |
          TYPE=workloads AWS_ACCOUNT_NAME=ansible COMPONENT=ansible make plan-test >> out.plan
          echo 'plan<<AOE' >> $GITHUB_OUTPUT
          echo ":orange_circle:" >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          cat out.plan >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          echo 'AOE' >> $GITHUB_OUTPUT
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ${{ steps.plan.outputs.plan }}
          GITHUB_TOKEN:  ${{ secrets.github_token }}
      - name: Run ansible make apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |      
          TYPE=workloads AWS_ACCOUNT_NAME=ansible COMPONENT=ansible make apply-test