# This is a basic workflow to help you get started with Actions

name: Arthur AWS Kubernetes Init/Plan/Apply

run-name: Run Terraform plan/apply on k8s resources


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACCESS_KEY_ID: ASIA2QIXXJAZEI466OBK
  SECRET_ACCESS_KEY: KsAL2t47VH+06iscmFksS7PtUhM5vNyEzEzGWXSq
  AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjEAUaDmFwLXNvdXRoZWFzdC0yIkgwRgIhAKweoWBItN2O8WupKPaPdojhe3kAPAO+qGVPr8KWorjNAiEAocZyEsSVV++E22DBGSYyK9LW/HA7gaDVflJJcvl//UoqjgMIbhADGgw3MjIxNDExMzY5NDYiDInGOuBcC08VCDbzcirrApwF1PN9UBfqVfxDJeArP6iCxlmTHoPOIZtCyUYfDHayToSMXF78tRpK8L+XEsD5Pk3y6oOd/4vLl/vF+DHQEQw4zq7v98twasyS5cL/RnOEGUgcQ7U3wbnF75YVVXlPau1h+RMVsT/hJ1Ong28YOTRljRpUq0tFZ9CbK0OLbjCe3fcQDDcXeySLRmaogyUEk4VPu7oZkmPK/tuLkox7FebwnCYbkJXbESYwJb4PHCquiGLOLzfAFb9v/KcLs3W0H67SIssz2Y3ZhJvS/QDaeWNMILHXrjcXRCUQ4OPII/+q4jukauqtRng7W7eW/pr0z9TXZarubTLKslXh1vDLM3obamVckBPsJQrAKbO8dPpAK1P23szhWRn42zZZCyGvj4HMxeKcDFJJuK/Po721J+/3NO2zOVs5DPrKy5vjr20J662Zo1isbv9AZNfB1lamZN7aUT+a80JahSTEzJWszH3mswkK5SVua0HwsTCl9u6kBjqlAfWstzRRvPlfDVNKhSTMbVAZOaaKxszTvx3dpeNS/4QPt5PHj6/qeRmAUB+E/hGJZ6E0y+3+b9jrsM0MMgyC85eJoQqLEkB8RolAqr3bybIzdaqXKUbm5gMRa3FsrhZl+BdfYsr1KTyYjlhqvK2BlBz0IlHO9ga9ve1pcM+XKHZkCXljQXLNX+jrP3ArGtjoNmkCkMO6p4ZUtmiOxuusbLwAg7kfDQ==
  AWS_EC2_METADATA_DISABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "setup"
  vpc-ec2-plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/k8s

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Access AWS account
        # access key for devops aws
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          aws sts get-caller-identity

      - name: Terraform Init
        run: |        
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform init
      
      - name: Terraform Plan
        run: |
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform plan -var-file="module.tfvars"
      
      - name: Terraform Show
        run: |
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform show

  vpc-ec2-apply:
    runs-on: ubuntu-latest
    environment: production
    needs: vpc-ec2-plan
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/k8s
    steps:
      - uses: actions/checkout@v3
      - name: Terraform Apply
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform init
          terraform apply -var-file="module.tfvars" --auto-approve