# This is a basic workflow to help you get started with Actions

name: Arthur AWS Kubernetes

run-name: Run Terraform plan/apply on k8s resources


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACCESS_KEY_ID: ASIA2QIXXJAZINSZSQGN
  SECRET_ACCESS_KEY: uJ0N2FJCApYAC/M2tokVPcAzfdxcSl2IjBMUbZoW
  AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjEDIaDmFwLXNvdXRoZWFzdC0yIkgwRgIhANYurdNQmq3aH5yybFt418Du/ZprhbVYpwG1+IqUYWWcAiEAhxT6Tj2kVcIMQvkvh5trFDP752w5a0smnNCnwN7UlhYqlwMIi///////////ARADGgw3MjIxNDExMzY5NDYiDH7p24foSLk0tEtB8yrrAsMlpnNSfhpFuCbtJM8n9EdieB0a9O+AprxCD3OwLjVcDjmqmTHnAV3U+0bTCknnkckQtfQWktMt/v/4nX7I5AIqQu/pbntp94pnsWjoYVnuhJ1dRnp8QUixIe989IdbeK6wyDjaJamN1X3M1GDmkoMTem/wwligcFnBiV1ROhnKCzoDkLLH3kAa0w2jsH5ur5CVu6fPu5bIY8mOOoTVxnagILpVK07o0C5CN2Z8r1wL3YefCJezxxq4/CvKgfZXM9R83aoT9LIFb+Co9aN36T1X2EPNA4AfDy6v+8bW9WDQZGjIdO59htQx9JlQmm5hi+Wh1pyGnPDWz3moAjwGGR8a8pRfpXUBkf+kyqlLubZoB1OJfqQsTWJVfQw7kGast7nUJpsrbdAJeh5XHEjG/SPn8TCuUx1cMdP/I+3BxyyC6TXoIU7+wfSReyvDsqAGXA2bQ71OkmROvBIQxrmW1ORP/KUKaZz1be/GqDCpvsCkBjqlAQEHXmkpAJGvdrY5ZPpx+18M3YaY4qz5Zg4UZLPW9rnB2v+1wOz/L8SZJfYdVNtQ5fXVqypkz7YDx+2QB8RrLzXodFR+pc9MkNGfh7giEJYmuw/0/4iD5f6LOYYhN1Oe96Naam3ZvWtyRAKl/U1fk4sRedY/NW1aVUgxkUjU7IGWlf9/yzBUvG5nsy5hfTwRzy9NqvrFXQuDQUcWChVA2ZgrsjWtEA==
  AWS_EC2_METADATA_DISABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "setup"
  ec2-instance-plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/ec2

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Access AWS account
        # access key for devops aws
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          aws sts get-caller-identity

      - name: Terraform Init
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform init
      
      - name: Terraform Plan
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform plan -var-file="module.tfvars"
      
      - name: Terraform Show
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform show

      - name: Terraform apply
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform apply -var-file="module.tfvars" --auto-approve

  vpc-plan:
    runs-on: ubuntu-latest
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/vpc
    steps:
      - uses: actions/checkout@v3

      - name: Terraform Init - Plan - Apply
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform init
          terraform plan -var-file="module.tfvars"
          terraform show
          terraform apply -var-file="module.tfvars" --auto-approve