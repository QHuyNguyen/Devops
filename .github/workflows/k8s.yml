# This is a basic workflow to help you get started with Actions

name: Arthur AWS Kubernetes Init/Plan/Apply

run-name: Run Terraform plan/apply on k8s resources


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2  
  AWS_EC2_METADATA_DISABLED: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "setup"
  vpc-ec2-plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/k8s

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Access AWS account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::722141136946:role/arthur-OpenID-role-test
          role-session-name: TerraformPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |      
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          echo "***List sts identity***"
          aws sts get-caller-identity
          echo "***List EC2 instances***"
          aws ec2 describe-instances
          echo "***List all buckets***"
          aws s3 ls
          terraform init -reconfigure
      
      - name: Terraform Plan
        run: |
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform plan -var-file="module.tfvars"
      
      - name: Terraform Show
        run: |
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform show

  vpc-ec2-apply:
    runs-on: ubuntu-latest
    environment: production
    needs: vpc-ec2-plan
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/k8s
    steps:
      - uses: actions/checkout@v3
      - name: Terraform Apply
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform init
          terraform apply -var-file="module.tfvars" --auto-approve