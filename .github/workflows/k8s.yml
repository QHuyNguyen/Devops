# This is a basic workflow to help you get started with Actions

name: Arthur AWS Kubernetes

run-name: Run Terraform plan/apply on k8s resources


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACCESS_KEY_ID: ASIA2QIXXJAZIQYFXV64
  SECRET_ACCESS_KEY: CuY2/WYGTuTT/eNsgb4Chj0ZmwBRa3sajsZBt4zq
  AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjEC0aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAKj6BCCPYkAQ62FNo26i9pTSWnru+w9MzIvHXnvpQuqZAiEAuDP+c0XT1bx8nUqfSaBIgn1k37f5b9UXGbtqWCXEziEqlwMIhv//////////ARADGgw3MjIxNDExMzY5NDYiDMcTTujUKvoQtVnbaCrrApmaRghUvIDlCul660yHrnRqv40E2vASwI9S/EHekpdA2O8FTjfBGaIMxbTHLz+OKRJOItcRzkwwgKgm9ql/WNBf1p8KQm5gancr8OezzqZPVdGFQVM4gaYaJl/08XiVIZEOkOhUst/S4eXh1Zw3aCzMCEZ8jD6e1d1lMWrLnKSK1d9n3Ty7nipSQLi27MCOxVB5Dh6CV8/jfBInu88VoIyLJwYT7pzFdm+uhD8i3sf468ixpOzgIJ5XOPr6OVVpG0JBL9aNY5SEaRS5EPFeYXwuyudUG+hwjPdftFaFsHUlTl9i8LWGhvy5ZD1nV6hUe+DbWxx3PY/C3W3TmqS83Zoqg1gHGVkMDhDW/S+ecJhXQdBp0GLXY7FkRViNbS1sjpSmLJLYnxC5NNaKv48TX+QKBfkct02njTFFpr4tCi7zYxaJjy4KAIeeV2sVYYmo1PJJjXaMEk90LUkVyUVzcdUWar4qRmPmi1MUIjCKuL+kBjqlAS9eWe3S1yGiVz8nB+jYD+ipLY/OoWS2Wx97C+3qGQYdvRKlJ53JnyN+sMqiDzU5UFAbt6ZylwIbWx8fESPpG2MF98rsmo5aPFYQOrv6ca/0vqSvPUuEqhFaNZEETxjfXT/4ZtHUzmwniTsG1xCghunbXC08A7FywKBBfZ8Bu9dH3K5ubu/ls/F1cDnC8fa9rljOOcS0NEfb6TAqlrUDeXSdJ/qCJA==
  AWS_EC2_METADATA_DISABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "setup"
  ec2-instance-plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/ec2

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Access AWS account
        # access key for devops aws
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          aws sts get-caller-identity

      - name: Terraform Init
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform init
      
      - name: Terraform Plan
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform plan -var-file="module.tfvars"
      
      - name: Terraform Show
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform show

      - name: Terraform apply
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform apply -var-file="module.tfvars" --auto-approve

  vpc-plan:
    runs-on: ubuntu-latest
    env:
      TERRAFORM_ROOT_MODULE: environments/non-prod/ap-southeast-2/vpc
    steps:
      - uses: actions/checkout@v3

      - name: Terraform Init - Plan - Apply
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}          
          cd ${{ env.TERRAFORM_ROOT_MODULE }}
          terraform init
          terraform plan -var-file="module.tfvars"
          terraform show
          terraform apply -var-file="module.tfvars" --auto-approve